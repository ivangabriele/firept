import { promises as fs } from 'fs'
import { getAbsolutePath } from 'esm-path'
import { format } from 'prettier'
import tsJsonSchemaGenerator, { type Config } from 'ts-json-schema-generator'

const TYPESCRIPT_INTERFACE_FILE_PATH = getAbsolutePath(import.meta.url, '../../src/libs/workspaceManager/types.ts')
const TS_CONFIG_PATH = getAbsolutePath(import.meta.url, '../../tsconfig.json')
const JSON_SCHEMA_PATH = getAbsolutePath(import.meta.url, '../../src/libs/workspaceManager/schema.ts')

const config: Config = {
  path: TYPESCRIPT_INTERFACE_FILE_PATH,
  tsconfig: TS_CONFIG_PATH,
  type: 'FireptConfig',
}

const schema = tsJsonSchemaGenerator.createGenerator(config).createSchema(config.type)
const schemaAsJson = JSON.stringify(schema, null, 2)
const schemaSource = [
  '// This file is automatically generated via `yarn build:schema`',
  '// !!! DO NOT EDIT IT DIRECTLY !!!',
  '',
  `export const FIREPT_CONFIG_SCHEMA = ${schemaAsJson}`,
].join('\n')
const lintedSchemaSource = await format(schemaSource, {
  parser: 'typescript',
  singleQuote: true,
})

await fs.writeFile(JSON_SCHEMA_PATH, lintedSchemaSource, 'utf-8')
